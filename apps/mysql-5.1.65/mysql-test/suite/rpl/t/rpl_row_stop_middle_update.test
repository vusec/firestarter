-- source include/have_binlog_format_row.inc
-- source include/have_debug.inc
-- source include/master-slave.inc

# master is asked to create small Rows events: if only one event is
# created, stopping slave at the end of that one will show no bug, we
# need at least two (and stop after first); in this test we use three.

connection master;
create table t1 (words varchar(20)) engine=myisam;

load data infile '../../std_data/words.dat' into table t1 (words);
select count(*) from t1;
save_master_pos;

connection slave;

# slave will automatically stop the sql thread thanks to the .opt
# file; it will initiate the stop request after the first
# Rows_log_event (out of 3) but should wait until the last one is
# executed before stopping.

source include/wait_for_slave_sql_to_stop.inc;

# check that we inserted all rows (waited until the last Rows event)
select count(*) from t1;

connection master;
drop table t1;
connection slave; # slave SQL thread is stopped
drop table t1;
--let $rpl_only_running_threads= 1
--source include/rpl_end.inc

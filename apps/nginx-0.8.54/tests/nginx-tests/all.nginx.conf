pid %%ROOTDIR%%/nginx.pid;
error_log %%ROOTDIR%%/error.log debug;

master_process off;
daemon         off;

events {
}

http {
    root %%ROOTDIR%%;
    access_log %%ROOTDIR%%/access.log;
    client_body_temp_path %%ROOTDIR%%/client_body_temp;
    fastcgi_temp_path %%ROOTDIR%%/fastcgi_temp;
    proxy_temp_path %%ROOTDIR%%/proxy_temp;
    uwsgi_temp_path %%ROOTDIR%%/uwsgi_temp;
    scgi_temp_path %%ROOTDIR%%/scgi_temp;

    #ssi_include_big
    output_buffers  2 512;
    gzip on;

    #range
    charset_map B A {
        58 59; # X -> Y
    }

    #proxy_cache
    proxy_cache_path   %%ROOTDIR%%/cache  levels=1:2
                       keys_zone=NAME:10m;

    #limit_req
    limit_req_zone  $binary_remote_addr  zone=one:10m   rate=1r/s;
    limit_req_zone  $binary_remote_addr  zone=long:10m  rate=1r/s;
    limit_req_zone  $binary_remote_addr  zone=fast:10m  rate=1000r/s;

    server {
        listen       127.0.0.1:8080;
        server_name  localhost;

        #proxy_cache
        gzip on;
        gzip_min_length 0;

        #ssi
        if ($args = "found") {
            return 204;
        }

        #ssi_include_big
        location /ssi_include_big/ {
            ssi on;
        }
        location /ssi_include_big/proxy/ {
            proxy_pass http://127.0.0.1:8080/ssi_include_big/local/;
        }
        location = /ssi_include_big/local/blah {
            return 204;
        }

        #rewrite_unescape
        location /rewrite_unescape/t1 {
            rewrite ^ $arg_r? redirect;
        }

        location /rewrite_unescape/t2 {
            rewrite ^ http://example.com$request_uri? redirect;
        }

        location /rewrite_unescape/t3 {
            rewrite ^ http://example.com$uri redirect;
        }

        location /rewrite_unescape/t4 {
            rewrite ^(.*) http://example.com$1 redirect;
        }

        location /rewrite_unescape/t5 {
            rewrite ^ http://example.com/blah%20%3Fblah redirect;
        }

        location /rewrite_unescape/t6 {
            rewrite ^ http://example.com/blah%20%2Fblah redirect;
        }

        #range
        location /range/t2.html {
            charset A;
            source_charset B;
        }

        #rewrite
        location /rewrite/ {
            rewrite ^ http://example.com/ redirect;
        }
        location /rewrite/add {
            rewrite ^ http://example.com/?c=d redirect;
        }
        location /rewrite/no {
            rewrite ^ http://example.com/?c=d? redirect;
        }
        location /rewrite/return204 {
            return 204;
        }
        location /rewrite/return200 {
            return 200;
        }
        location /rewrite/return405 {
            return 405;
        }
        location /rewrite/error404return405 {
            error_page 404 /rewrite/return405;
            return 404;
        }
        location /rewrite/error405return204 {
            error_page 405 /rewrite/return204;
            return 405;
        }
        location /rewrite/error405return200 {
            error_page 405 /rewrite/return200;
            return 405;
        }
        location /rewrite/return200text {
            return 200 "text";
        }
        location /rewrite/return404text {
            return 404 "text";
        }
        location /rewrite/return302text {
            return 302 "text";
        }
        location /rewrite/error405return200text {
            error_page 405 /rewrite/return200text;
            return 405;
        }
        location /rewrite/error302return200text {
            error_page 302 /rewrite/return200text;
            return 302 "text";
        }
        location /rewrite/error405return302text {
            error_page 405 /rewrite/return302text;
            return 405;
        }
        location /rewrite/error405rewrite {
            error_page 405 /rewrite/;
            return 405;
        }
        location /rewrite/error405directory {
            error_page 405 /rewrite/directory;
            return 405;
        }
        location /rewrite/directory {
        }

        #proxy_var
        location /proxy_xar/proxy {
            proxy_pass http://127.0.0.1:8080/proxy_xar/return-xar;
        }
        location /proxy_xar/return-xar {
            add_header  X-Accel-Redirect     /proxy_xar/index.html;

            # this headers will be preserved on
            # X-Accel-Redirect

            add_header  Content-Type         text/blah;
            add_header  Set-Cookie           blah=blah;
            add_header  Content-Disposition  attachment;
            add_header  Cache-Control        no-cache;
            add_header  Expires              fake;
            add_header  Accept-Ranges        parrots;

            # others won't be
            add_header  Something            other;

            return 204;
        }

        #proxy_store
        location /proxy_store/store- {
            proxy_pass http://127.0.0.1:8080/proxy_store/;
            proxy_store on;
        }
        location /proxy_store/ssi.html {
            ssi on;
        }
        location /proxy_store/index-nostore.html {
            add_header  X-Accel-Expires  0;
        }
        location /proxy_store/index-big.html {
            limit_rate  200k;
        }

        #proxy_chunked
        location /proxy_chunked/ {
            proxy_pass http://127.0.0.1:8081;
            proxy_read_timeout 1s;
        }
        location /proxy_chunked/nobuffering {
            proxy_pass http://127.0.0.1:8081;
            proxy_read_timeout 1s;
            proxy_buffering off;
        }
        location /proxy_chunked/inmemory.html {
            ssi on;
        }

        #proxy_noclose
        location /proxy_noclose/ {
            proxy_pass http://127.0.0.1:8081;
            proxy_read_timeout 1s;
        }
        location /proxy_noclose/uselen {
            proxy_pass http://127.0.0.1:8081;

            # test will wait only 2s for reply, we it will fail if
            # Content-Length not used as a hint

            proxy_read_timeout 10s;
        }

        #proxy_cache
        location /proxy_cache/ {
            proxy_pass    http://127.0.0.1:8085;

            proxy_cache   NAME;

            proxy_cache_valid   200 302  1s;
            proxy_cache_valid   301      1d;
            proxy_cache_valid   any      1m;

            proxy_cache_min_uses  1;

            proxy_cache_use_stale  error timeout invalid_header http_500
                                   http_404;
        }
        location /proxy_cache/fake/ {
            proxy_pass    http://127.0.0.1:8082;
            proxy_cache   NAME;
        }

        #proxy
        location /proxy/ {
            proxy_pass http://127.0.0.1:8081;
            proxy_read_timeout 1s;
        }

        #memcached
        location /memcached_fake/ {
            set $memcached_key $uri;
            memcached_pass 127.0.0.1:8081;
        }
        location /memcached_fake/ssi {
            default_type text/html;
            ssi on;
        }

        #not_modified
        location /not_modified/ {
            if_modified_since before;
        }

        #limit_req
        location /limit_req/ {
            limit_req    zone=one  burst=1  nodelay;
        }
        location /limit_req/long {
            limit_req    zone=long  burst=5;
        }
        location /limit_req/fast {
            limit_req    zone=fast  burst=1;
        }

        #http_location
        location = /http_location/ {
            add_header X-Location exactlyroot;
            return 204;
        }
        location /http_location/ {
            add_header X-Location root;
            return 204;
        }
        location ^~ /http_location/images/ {
            add_header X-Location images;
            return 204;
        }
        location ~* \.(gif|jpg|jpeg)$ {
            add_header X-Location regex;
            return 204;
        }
        location ~ casefull {
            add_header X-Location casefull;
            return 204;
        }

        #http_server_name
        location /http_server_name/ {
            add_header X-Server $server_name;
            return 204;
        }

        #http_expect_100_continue
        location /http_expect_100_continue/ {
            proxy_pass http://localhost:8080/local;
        }
        location /http_expect_100_continue/local {
        }

        #autoindex
        location /autoindex/ {
            autoindex on;
        }
        location /autoindex/utf8/ {
            autoindex on;
            charset utf-8;
        }

        #gzip
        location /gzip/ {
            gzip on;
        }
        location /gzip/proxy/ {
            gzip on;
            proxy_pass http://127.0.0.1:8080/gzip/local/;
        }
        location /gzip/local/ {
            gzip off;
            alias %%ROOTDIR%%/gzip/;
        }

        #ssi
        location /ssi/ {
            ssi on;
        }
        location /ssi/proxy/ {
            ssi on;
            proxy_pass http://127.0.0.1:8080/ssi/local/;
        }
        location /ssi/cache/ {
            proxy_pass http://127.0.0.1:8080/ssi/local/;
            proxy_cache NAME;
            proxy_cache_valid 200 1h;
        }
        location /ssi/local/ {
            ssi off;
            alias %%ROOTDIR%%/ssi/;
        }

        #ssi_waited
        location /ssi_waited/ {
            ssi on;
        }
    }
    server {
        listen       127.0.0.1:8085;
        server_name  localhost;

        #proxy_cache
        location /proxy_cache/ {
        }
    }

    #http_server_name
    server {
        listen       127.0.0.1:8080;
        server_name  www.example.com;

        location /http_server_name/ {
            add_header X-Server $server_name;
            return 204;
        }
    }
    server {
        listen       127.0.0.1:8080;
        server_name  ~^EXAMPLE\.COM$;

        location /http_server_name/ {
            add_header X-Server $server_name;
            return 204;
        }
    }
    server {
        listen       127.0.0.1:8080;
        server_name  ~^(?P<name>.+)\Q.example.com\E$;

        location /http_server_name/ {
            add_header X-Server $server_name;
            add_header X-Match  $name;
            return 204;
        }
    }
    server {
        listen       127.0.0.1:8080;
        server_name  "~^(?<name>www\p{N}+)\.example\.com$";

        location /http_server_name/ {
            add_header X-Server $server_name;
            add_header X-Match  $name;
            return 204;
        }
    }
}


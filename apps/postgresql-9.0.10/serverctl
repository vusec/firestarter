#!/bin/bash

PROC_NAME="postgres"
BIN_PATH=`pwd`/install/bin/postgres
BC_PATH=`pwd`/install/bin/postgres

ROOT=${LLVMAPPS_ROOT-../..}

. ${ROOT}/apps/scripts/include/cmdctl.inc

DATADIR=`pwd`/data
LISTEN_PORT=1080
mode=$1
shift || mode="no_action"

function cmdctl_server_ps {
    FIRST_PID=`ps --sort=start_time -eo comm,pid,args | grep -e "[0-9] $BIN_PATH" -e "postgres: " | head -1 | awk '{ print $2; }'`
    ps --sort=start_time ${2} -eo comm,${1},ppid,pid,args | grep " $FIRST_PID " | grep -v grep
}

function cmdctl_help {
    cmdctl_help_gen --help
}

PATCH_URL="http://www.postgresql.org/ftp/source/"
PATCH_GET_URL="https://ftp.postgresql.org/pub/source"
PATCH_BASE_VERSION="9.0.10"
PATCH_PROG_SUFFIX=".tar.gz"

function patch_list {
    wget -O index.html -q ${PATCH_URL}/
    cat index.html | grep -E "v[[:digit:]]+" | \
        sed -e 's/.*<a.*>v\(.*\)<\/a>.*/\1/' | grep -v deps | patch_list_sort
    rm -f index.html
}

function patch_version_to_url {
    echo "${PATCH_GET_URL}/v${1}/postgresql-${1}${PATCH_PROG_SUFFIX}"
}

case "$mode" in
  'start')
    if [ ! -f postgresql.init.done ]; then
    	echo "***** Initializing $PROC_NAME server..."
        ./postgresql.init
    fi
    echo "***** Starting $PROC_NAME server..."
    cmdctl_server_check_not_running
    if [ "$LLVM_CMD_IS_GDB" == "1" ]; then
        eval $LLVM_CMD_PREFIX $BIN_PATH -p $LISTEN_PORT -D $DATADIR $*
        echo eval $LLVM_CMD_PREFIX $BIN_PATH -p $LISTEN_PORT -D $DATADIR $*
    else
        echo "eval $LLVM_CMD_PREFIX $BIN_PATH -p $LISTEN_PORT -D $DATADIR $* &> __serverctl.tmp &"
        eval $LLVM_CMD_PREFIX $BIN_PATH -p $LISTEN_PORT -D $DATADIR $* &> __serverctl.tmp &
        cmdctl_server_wait_for_listen_port $LISTEN_PORT
        cmdctl_server_wait_for_file /tmp/.s.PGSQL.$LISTEN_PORT
        cat __serverctl.tmp 1>&2
        rm -f __serverctl.tmp
    fi
    ;;
  'fix')
    cmdctl_server_stop
    ./postgresql.init
    ;;
  *)
    cmdctl_server_action $mode $*
    ;;
esac

